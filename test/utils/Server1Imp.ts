// **********************************************************************
// Parsed By TarsParser(1.1.0), Generated By tars2node(20190529)
// TarsParser Maintained By <TARS> and tars2node Maintained By <superzheng>
// Generated from "Hello.tars" by Imp Mode
// **********************************************************************

import * as TarsCpp from "@tars/rpc";
import * as base from "./protocol/Hello";
import {Hello as HelloC} from "./protocol/HelloProxy"

const proxy = TarsCpp.client.stringToProxy(HelloC.DemoProxy, "Hello.Server2.DemoObj@tcp -h 127.0.0.1 -p 20002 -t 60000")

async function callClient(current: base.Hello.DemoImp.testFnCurrent, stRsp: base.Hello.TestRsp) {
    let stReq = new HelloC.TestReq()
    stReq.iAge = 1
    stReq.sName = "server1 req"
    await proxy.testFn(1, "name", stReq)
    stRsp.readFromObject({
         iRet: 0,
         sMsg: "server1 msg"
    })
    current.sendResponse(0, 10, "server1 name", stRsp)
}

export namespace Hello {
    export class DemoImp extends base.Hello.DemoImp { 
        initialize() {
        }

        testFn(current: base.Hello.DemoImp.testFnCurrent, iLen: number, sName: string, stReq: base.Hello.TestReq, iWidth: number, sFullName: string, stRsp: base.Hello.TestRsp) { 
            //console.log("get req")
            setTimeout(()=>{
                callClient(current, stRsp)
            }, 2000)
        }
    }
}
